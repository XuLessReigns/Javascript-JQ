闭包（closure）的定义：
	允许在一个作用域中访问其自身以外的变量或函数
	当函数创建后并执行就会产生作用域（安全气泡）


闭包原理：
	当函数执行时，解释器会检测该作用域内是否引用除自身外的变量，若引用会产生一个闭包对象，并且将
	该闭包对象封闭在自身作用域中，这样就形成了作用域可以访问除其自身以外的变量。


闭包的副作用：

	会造成i的变量不在内存释放（垃圾回收机制）
	当把内部函数交给一个全局变量时，相当于全局变量引用了内部函数并且内部函数使用了除自身作用域
	外的变量此时就会造成闭包对象中的变量不被GC(垃圾回收器)回收，若想回收应该全局变量的指向清空
	以为ＧＣ回收机制是靠引用计数判定的。（主要是看该内存地址是否引用）